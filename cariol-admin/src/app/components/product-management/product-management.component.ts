// import { Component, OnInit } from '@angular/core';
// import { ProductService } from '../../services/product.service';
// import { Router } from '@angular/router';

// @Component({
//   selector: 'app-product-management',
//   standalone: false,
//   templateUrl: './product-management.component.html',
//   styleUrls: ['./product-management.component.css']
// })
// export class ProductManagementComponent implements OnInit {
//   products: any[] = [];
//   categories: string[]  = [];
//   searchQuery: string = '';
//   categoryFilter: string = 'all';

//   constructor(private productService: ProductService, private router: Router) {}

//   ngOnInit(): void {
//     this.loadProducts();
//     this.loadCategories();
//   }

 
// loadProducts(): void {
//   this.productService.getAdminProducts().subscribe(
//     (products) => {
//       console.log("S·∫£n ph·∫©m nh·∫≠n ƒë∆∞·ª£c t·ª´ API:", products);  // Debug log
//       this.products = products;  // G√°n d·ªØ li·ªáu s·∫£n ph·∫©m v√†o bi·∫øn
//     },
//     (error) => {
//       console.error("L·ªói khi g·ªçi API:", error);  // Debug l·ªói
//     }
//   );
// }

//   // T·∫£i danh m·ª•c s·∫£n ph·∫©m t·ª´ server
//   loadCategories() {
//     this.productService.getCategories().subscribe(categories => {
//       this.categories = categories;
//     });
//   }

//   // H√†m t√¨m ki·∫øm
//   onSearch() {
//     this.loadProducts();
//   }

//   onCategoryChange() {
//     this.loadProducts();  // G·ªçi l·∫°i h√†m loadProducts khi categoryFilter ƒë∆∞·ª£c thay ƒë·ªïi
//   }

//   // H√†m th√™m s·∫£n ph·∫©m
//   addProduct() {
//     this.router.navigate(['/add-product']);
//   }

//   // H√†m s·ª≠a s·∫£n ph·∫©m
//   editProduct(product: any) {
//     this.router.navigate([`/edit-product/${product._id}`]);
//   }

//   // H√†m x√≥a s·∫£n ph·∫©m
//   deleteProduct(id: string) {
//     if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y?')) {
//       this.productService.deleteProduct(id).subscribe(() => {
//         this.loadProducts();
//       });
//     }
//   }
// }


import { Component, OnInit } from '@angular/core';
import { ProductService } from '../../services/product.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-product-management',
  standalone: false,
  templateUrl: './product-management.component.html',
  styleUrls: ['./product-management.component.css']
})
export class ProductManagementComponent implements OnInit {
  products: any[] = []; // Danh s√°ch s·∫£n ph·∫©m
  categories: string[] = []; // Danh s√°ch danh m·ª•c
  searchQuery: string = ''; // Chu·ªói t√¨m ki·∫øm
  categoryFilter: string = 'all'; // M·∫∑c ƒë·ªãnh hi·ªÉn th·ªã t·∫•t c·∫£ s·∫£n ph·∫©m

  constructor(private productService: ProductService, private router: Router) {}

  ngOnInit(): void {
    this.loadCategories();  // T·∫£i danh m·ª•c tr∆∞·ªõc
    this.loadProducts();    // Sau ƒë√≥ t·∫£i to√†n b·ªô s·∫£n ph·∫©m
  }

  // üìå T·∫£i danh s√°ch s·∫£n ph·∫©m t·ª´ API
  loadProducts(): void {
    this.productService.searchProducts(this.searchQuery, this.categoryFilter).subscribe(
      (products) => {
        console.log("S·∫£n ph·∫©m nh·∫≠n ƒë∆∞·ª£c t·ª´ API:", products);  // Debug log
        this.products = products;  // G√°n d·ªØ li·ªáu s·∫£n ph·∫©m v√†o bi·∫øn
      },
      (error) => {
        console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", error);
      }
    );
  }

  // üìå T·∫£i danh m·ª•c s·∫£n ph·∫©m t·ª´ server
  loadCategories(): void {
    this.productService.getCategories().subscribe(
      (categories) => {
        // this.categories = ['T·∫•t c·∫£ s·∫£n ph·∫©m', ...categories]; // Th√™m "T·∫•t c·∫£" v√†o danh s√°ch

        this.categories = categories; // Th√™m "T·∫•t c·∫£" v√†o danh s√°ch
      },
      (error) => {
        console.error("L·ªói khi t·∫£i danh m·ª•c:", error);
      }
    );
  }

  // üìå X·ª≠ l√Ω khi ch·ªçn danh m·ª•c (l·ªçc s·∫£n ph·∫©m)
  onCategoryChange(): void {
    console.log("Danh m·ª•c ƒë√£ ch·ªçn:", this.categoryFilter); // Debug log
    this.loadProducts(); // G·ªçi l·∫°i API ƒë·ªÉ l·ªçc danh s√°ch s·∫£n ph·∫©m
  }

  // üìå T√¨m ki·∫øm s·∫£n ph·∫©m theo t√™n
  onSearch(): void {
    this.loadProducts(); // G·ªçi l·∫°i API v·ªõi t√™n s·∫£n ph·∫©m t√¨m ki·∫øm
  }

  // üìå ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang th√™m s·∫£n ph·∫©m
  addProduct(): void {
    this.router.navigate(['/add-product']);
  }

  // üìå ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang ch·ªânh s·ª≠a s·∫£n ph·∫©m
  editProduct(product: any): void {
    this.router.navigate([`/edit-product/${product._id}`]);
  }

  // üìå X√≥a s·∫£n ph·∫©m
  deleteProduct(id: string): void {
    if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y?')) {
      this.productService.deleteProduct(id).subscribe(() => {
        this.loadProducts(); // C·∫≠p nh·∫≠t danh s√°ch sau khi x√≥a
      });
    }
  }
}
